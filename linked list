#include<stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node *next;
};
void linkedListTraversal(struct Node *temp) 
{
    while (temp!= NULL)
    {
        printf("Element: %d\n", temp->data);
        temp = temp->next;
    }
}

struct Node * insertAtFirst(struct Node *head, int data){
    struct Node * temp = (struct Node *) malloc(sizeof(struct Node));
    temp->data = data;
 
    temp->next = head;
    return temp; 
}

struct Node * insertAtIndex(struct Node *head, int data, int index){
    struct Node * temp = (struct Node *) malloc(sizeof(struct Node));
    struct Node * p = head;
    int i = 0;
 
    while (i!=index-1)
    {
        p = p->next;
        i++;
    }
    temp->data = data;
    temp->next = p->next;
    p->next = temp;
    return head;
}

struct Node * insertAtEnd(struct Node *head, int data){
    struct Node * temp = (struct Node *) malloc(sizeof(struct Node));
    temp->data = data;
    struct Node * p = head;
 
    while(p->next!=NULL){
        p = p->next;
    }
    p->next = temp;
    temp->next = NULL;
    return head;
}

struct Node * deleteFirst(struct Node * head){
    struct Node * temp = head;
    head = head->next;
    free(temp);
    return head;
}

struct Node *deleteAtIndex(struct Node * head, int index,int i){
    struct Node *p = head;
    struct Node *q = head->next;
    for(i=0; i<index-1; i++)
    {
        p = p->next;
        q = q->next;
    }
    
    p->next = q->next;
    free(q);
    return head;
}

struct Node * deleteAtLast(struct Node * head){
    struct Node *p = head;
    struct Node *q = head->next;
    while(q->next !=NULL)
    {
        p = p->next;
        q = q->next;
    }
    
    p->next = NULL;
    free(q);
    return head;
}

int main()
{
    struct Node *head;
    struct Node *second;
    struct Node *third;
    struct Node *fourth;
    head = (struct Node *)malloc(sizeof(struct Node));
    second = (struct Node *)malloc(sizeof(struct Node));
    third = (struct Node *)malloc(sizeof(struct Node));
    fourth = (struct Node *)malloc(sizeof(struct Node));
    head->data = 11;
    head->next = second;
    second->data = 45;
    second->next = third;
    third->data = 54;
    third->next = fourth;
    fourth->data = 78;
    fourth->next = NULL;
    printf("Linked list before deletion\n");
    linkedListTraversal(head);
    head = deleteAtLast(head);
    printf("Linked list after deletion\n");
    linkedListTraversal(head);
    return 0;
}
